{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","onSubmit","submit","type","value","onChange","change","placeholder","Result","weather","err","city","date","time","sunrise","sunset","temp","feelsLike","pressure","wind","description","icon","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","celsiusTemp","toFixed","celsiusFeelsLikeTemp","weatherIcon","descriptionCapitalized","charAt","toUpperCase","slice","src","alt","App","state","handleCitySubmit","e","preventDefault","API","fetch","then","response","ok","Error","json","result","toLocaleDateString","setState","prevState","sys","speed","main","feels_like","catch","console","log","handleInputChange","target","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a202b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = (props) => {\r\n\r\n    return (\r\n        <div className='container'>\r\n            <form onSubmit={props.submit}>\r\n                <input \r\n                type=\"text\" \r\n                value={props.value}\r\n                onChange={props.change}\r\n                placeholder=\"Wpisz miasto\"\r\n                />\r\n                <button><i className=\"search fas fa-search\"></i></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react';\r\nimport './Result.css';\r\n\r\nconst Result = (props) => {\r\n\r\n    const {err, city, date, time, sunrise, sunset, temp, feelsLike, pressure, wind, description, icon} = props.weather\r\n\r\n    let content = null;\r\n\r\n    if(!err && city) {\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n    const celsiusTemp = (temp - 273.15).toFixed();\r\n    const celsiusFeelsLikeTemp = (feelsLike - 273.15).toFixed();\r\n    const weatherIcon = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n    const descriptionCapitalized = description.charAt(0).toUpperCase() + description.slice(1);\r\n    \r\n        content = (\r\n            <div className='container'>\r\n                <div className='result'>\r\n                    <div className='placeAndTime'>\r\n                        <h2 className='place'>{city.toUpperCase()}</h2>\r\n                        <h4 className='date'>{date}</h4>\r\n                        <h4 className='time'>{time}</h4>\r\n                    </div>\r\n                    <div className=\"sunriseAndSunset\">\r\n                        <h4><i className=\"fas fa-sun\"></i> {sunriseTime}</h4>\r\n                        <h4><i className=\"fas fa-moon\"></i> {sunsetTime}</h4>\r\n                    </div>\r\n                    <div className=\"mainInfo\">\r\n                        <div className='temp'>\r\n                            <h2>{celsiusTemp}<sup>&#176;C</sup></h2>\r\n                            <h4>Odczuwalna: {celsiusFeelsLikeTemp} &#176;C</h4>\r\n                            <h4 className='description'>{descriptionCapitalized}</h4>\r\n                        </div>\r\n                        <div className='additionalInfo'>\r\n                            <div className='weatherIcon'>\r\n                                <img src={weatherIcon} alt=\"weather icon\"/>\r\n                                \r\n                            </div>\r\n                            <div className='windAndPressure'>\r\n                                <h4>Siła wiatru: {wind} m/s</h4>\r\n                                <h4>Ciśnienie: {pressure} hPa</h4>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {err ? `Nie odnaleziono w bazie miasta ${city}` : content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result","import React from 'react';\nimport Form from './Form';\nimport Result from './Result';\nimport './App.css';\n\nclass App extends React.Component {\n\n  \n  state = {\n    value: '',\n    date: '',\n    time: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    wind: '',\n    pressure: '',\n    temp: '',\n    feelsLike: '',\n    icon:'',\n    err: false,\n\n}\n\nhandleCitySubmit = (e) => {\ne.preventDefault();\nconst API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=e15eca489ff47bc3dd2a282ecc1adc7d&lang=pl`;\n\nfetch(API)\n.then(response => {\n  if(response.ok){\n    return response\n  }\n  throw Error(\"Nie odnaleziono w bazie\")\n})\n.then(response => response.json())\n.then(result => {\n  const date = new Date().toLocaleDateString();\n  const time = new Date().toLocaleTimeString();\n  this.setState(prevState => ({\n    err: false,\n    date: date,\n    time: time,\n    city: prevState.value,\n    sunrise: result.sys.sunrise,\n    sunset: result.sys.sunset,\n    wind: result.wind.speed,\n    pressure: result.main.pressure,\n    temp: result.main.temp,\n    feelsLike: result.main.feels_like,\n    description: result.weather[0].description,\n    icon: result.weather[0].icon\n  }))\n})\n.catch(err => {\n  console.log(err);\n  this.setState(prevState => ({\n    err: true,\n    city: prevState.value\n  }))\n})\n}\n\n\n\nhandleInputChange = (e) => {\n  this.setState({\n    value: e.target.value,\n  })\n}\n\nrender()  {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"App\">\n        <h1 className='container'>Sprawdź pogodę w swoim mieście:</h1>\n        <Form \n        change={this.handleInputChange} \n        submit={this.handleCitySubmit}\n        value={this.state.value}/>\n        <Result weather={this.state} />\n      </div>\n    </div>\n    ) \n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}